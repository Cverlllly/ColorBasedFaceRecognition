name: 28539 Test

on:
  push:
    paths:
      - '**.py'
      - 'tests/**'
      - '.github/workflows/28539_test.yml'
  pull_request:

jobs:
  preveri-teste:
    runs-on: ubuntu-latest
    outputs:
      napaka_obstaja: ${{ steps.preveri.outputs.napaka_obstaja }}

    steps:
      - name: Checkout koda
        uses: actions/checkout@v4

      - name: Preveri ali obstajajo testi
        id: preveri
        run: |
          if ls tests/test_*.py > /dev/null 2>&1; then
            echo "Testne skripte obstajajo." > napaka.txt
            echo "napaka_obstaja=false" >> $GITHUB_OUTPUT
          else
            echo "Napaka: Ni testnih skript!" > napaka.txt
            echo "napaka_obstaja=true" >> $GITHUB_OUTPUT
          fi

      - name: Shrani napaka.txt kot artefakt
        uses: actions/upload-artifact@v4
        with:
          name: napaka
          path: napaka.txt

  izvedi-teste:
    needs: preveri-teste
    if: needs.preveri-teste.outputs.napaka_obstaja == 'false'
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - name: Checkout koda
        uses: actions/checkout@v4

      - name: Prenesi napaka.txt
        uses: actions/download-artifact@v4
        with:
          name: napaka
          path: ./artefakti

      - name: Prikaži napaka.txt
        run: cat ./artefakti/napaka.txt

      - name: Namesti odvisnosti
        run: |
          if [[ $RUNNER_OS == 'Linux' ]]; then
            sudo apt update
            sudo apt install -y python3-opencv python3-pip
            python3 -m pip install --upgrade pip
            python3 -m pip install -r requirements.txt
          elif [[ $RUNNER_OS == 'Windows' ]]; then
            choco install python3
            python -m pip install --upgrade pip
            python -m pip install -r requirements.txt
          elif [[ $RUNNER_OS == 'macOS' ]]; then
            brew install python
            python3 -m venv venv  # Create a virtual environment
            source venv/bin/activate  # Activate the virtual environment
            python3 -m pip install --upgrade pip  # Upgrade pip inside the virtual environment
            python3 -m pip install -r requirements.txt  # Install dependencies inside the virtual environment
            # Explicitly install numpy in case it's not in requirements.txt
            python3 -m pip install numpy
          fi
        shell: bash

      - name: Zaženi teste
        run: |
          python3 -m unittest discover -s tests || echo "Testi so se neuspešno končali"
        continue-on-error: true
        shell: bash